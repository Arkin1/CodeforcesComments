((-1, 943118)) => <div class="ttypography"><p>Any ideas about <code>Bonus Problem for D</code>? </p><p>I have solved problem D, but I can't think of any approach for doing it for all k.</p><p>Maybe <a class="rated-user user-orange" href="/profile/Vladithur" title="Master Vladithur">Vladithur</a> can create a separate blog post about the solutions of bonus problems.</p></div>
((943118, 943122)) => <div class="ttypography"><p>I'm too lazy to do that(</p><p>As for the bonus of problem D, the basic idea is to extend the greedy solution.</p></div>
((943118, 943124)) => <div class="ttypography"><p>If we try to extend the greedy solution of D. The complexity reaches <code>O(n^2)</code>.</p> <ul>   <li>To find for any <code>k</code> we need to do <code>O(n)</code> processing.</li>   <li>I tried to think how to use the solution of <code>k-1</code> to solve for <code>k</code>, But there seems a lot of casework, and even after that complexity still seems to be <code>O(n^2)</code> in some worst cases.</li> </ul><p>Can someone help me here ? </p></div>
((943124, 943138)) => <div class="ttypography"><p>What I meant is that you process the values of $$$a$$$ in increasing order and then maintain a couple of sets / multisets to find the answer for every $$$k$$$. Try to find what information you need to know to get the answer for some $$$k$$$ (and is easy to maintain when you move on to $$$k + 1$$$).</p></div>
