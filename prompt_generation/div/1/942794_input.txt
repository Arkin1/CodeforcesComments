((-1, 942794)) <<===>> In C iterating from last index, I checked if Ai < Ai-1. If yes then simply print number of distinct elements before Ai and break. If no then check whether count of Ai>1 && Ai!=Ai-1(i.e its duplicate lies in prefix of the array) then also print number of distinct elements before Ai and break. (link to problem C) Please help me where am I doing wrong  [<<<new_com>>>]
((942794, 942859)) <<===>> I am not confident that your idea would work in general, but here is an immediate error I found: when line 34 is executed, i.e., decreasing the hash value of an element if it appears multiple times in a row, the decrement --c at line 37 is still executed, even though the number of distinct values in the prefix has not decreased. Here is are three test cases I encourage you to check:  (code) Each occurrence of 2 decreases the number of distinct characters, with the final test case even reporting a result of -1. I think you intended to put a  (code)  after line 34. I'm still a little skeptical of whether this would be enough to correct the program (since the logic feels like it still has loopholes), but that should be a good step forward. [<<<new_com>>>]
((942859, 942863)) <<===>> @LightBrand99 Thanks a lot for pointing my mistake.In hurry I didn't noticed. Decrementing "c" in else part I got an AC . I feel bad because of that I got WA (link to problem Irrelevant)  [<<<new_com>>>]
