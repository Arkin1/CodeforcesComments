((-1, 879382)) => <p>Can someone please explain for Problem E, I tried this test case - for the solution mentioned in editorial</p> <p>input — </p>    <code>  <p>the output is — </p>    <code>  <p>As per my understanding, according to the problem st. shouldn't it be, only black nodes and the ones adjacent to it, i.e. 1, 13, 9, 2, 12, 8 </p>    <code>  <p>Can someone explain this?</p> <p>Upd: Sorry I gave wrong input.</p>
((879382, 879404)) => <p>It doesn't have to be only black nodes and the ones adjacent to it. Consider an edge which links two white nodes. If the number of black nodes on the left side of this edge (in the entire tree) are 2 or more, then we can go from right to left along this edge, and similarly for left to right. The adjacent-black-node condition is only needed when the number of black nodes on one side of an edge are less than two.</p> <p>Example: If your tree is 1-2-3-4-5 and 1,2 are black nodes. Then from 5 you can select 1 and move the chip to 4. Then you can select 2 and move the chip to 3, and so on. So, whenever you have 2 or more black nodes on one side of the edge, you won't get forced back as you move along the edge in that direction.</p>
((879404, 879488)) => <p>Got it, thanks for the explanation!</p>
