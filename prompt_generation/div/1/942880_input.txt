((-1, 942880)) <<===>> Bonus Problem's Solution for A We have to find $$$ans_1, ans_2, \ldots ans_n$$$  First Initialize each $$$ans_i$$$ to $$$0$$$. Then traverse the array  (code)  from end Now say element  (code)  appears at index  (code)  and $$$x<i$$$. This implies that  (code)  is at wrong position, after its ideal position  (code) . This will cause the $$$ans_j$$$ to be increased by $$$1$$$ for $$$x \le j < i$$$ We can perform this range increment lazily. Hence,  (code)  array will be computed in  (code)  time.  (link to problem A)   [<<<new_com>>>]
((942880, 948081)) <<===>> instead of arrray we could do this with condition if(element>k && index of element <k)cnt++ ll n,k,cnt=0;
    cin>>n>>k;

    FOR(i,0,n){
        ll x;
        cin>>x;
        if(x>k && i<k)cnt++;
    }

    cout<<cnt<<endl; (link to problem Irrelevant)  [<<<new_com>>>]
