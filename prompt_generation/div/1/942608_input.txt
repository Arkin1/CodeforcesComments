<div class="ttypography"><p>When you solve it you understand how easy it is and how small your solution is</p></div> <<===>> 
<div class="ttypography"><p>It depends on which solution you will come up with. I did a smart greedy without any data structures ($$$O(n\log{n})$$$ only because of sorting) and the code is quite messy and problem still don't seem easy after getting AC :(</p></div> <<===>> 
<div class="ttypography"><p>That's because you don't change your approach to another easier solution while solving the problem so you might be struggle. There are a lot more interesting solutions that you can learn from other people (especially, the problem's author) and when you have a better insight, you'll start to believe that the problem is easier than you expected!</p></div> <<===>> 
<div class="ttypography"><p>I was quite sure that there is an easier solution exists while solving this problem, but I didn't come up with it, so I couldn't just change the approach fastly</p></div> <<===>> 
<div class="ttypography"><p>Can you tell what was your greedy approach? I used ordered set and considered all possibilities while choosing which 'k' elements to remove for each &quot;i&quot; &amp; &quot;i+1&quot; nodes.</p></div> <<===>> 
