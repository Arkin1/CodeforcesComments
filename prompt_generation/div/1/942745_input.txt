((-1, 942745)) <<===>> Very easy greedy  (link to problem D)  of problem D [<<<new_com>>>]
((942745, 942857)) <<===>> can you explain it as well plz? [<<<new_com>>>]
((942857, 942903)) <<===>> Try this for an explanation.As discussed elsewhere, when doing an update of an a_i you should always update to 1e9. There are two possible strategies for doing the K updates of the a_i: 1. Update the smallest K of the a_i, or 2. Update the smallest (K-1) of the a_i, and then use the last update to update a neighbour of the largest of the updated a_i.We can split the 2nd strategy into two: if K=1, then the final update is to the largest of the original a_i if K>1, then the final update will be to a neighbour of a_i already updated with value 1e9.The final diameter of the graph is  min( 2*smallest a_i, max of smaller neighbours a_i, a_i+1 )So overall we have to calculate 4 numbers: v11 — strategy 1 — 2*smallest of updated a_i v12 — stratgey 1 — max of smaller of the a_i and a_i+1 v21 — strategy 2 — 2*smallest of updated a_i v22 — stratgey 2 — max of smaller of the updated a_i and a_i+1diameter for strategy 1 is min(v11,v12) diameter for strategy 2 is min(v21,v22)We pick the strategy for the larger diameter, so the final answer  max( min(v11,v12), min(v21,v22) )In the code:  v22 is cnt — initially calculated for K=1, and overwritten with 1e9 if K>1  v21 is expressed as 2ll*vec[k-1].ff  min(v21,v22) is put into "ans"The smallest K values of a_i are identified by populating and sorting vector<pair<ll,ll>> vec. Then we explicitly update the a_i array.v12 is calculated in maxi2 in a loop that looks at the neighbours min(a[i], a[i+1]); v11 is picked up from 2ll*vec[0].ff and we have maxi2 = min( maxi2, 2ll*vec[0].ff ) to calculate min(v11,v12).The final output  cout << max( ans, maxi2) selects the diameter from the better of the two strategies. [<<<new_com>>>]
((942903, 943004)) <<===>> thanks for the detailed explanation! [<<<new_com>>>]
((942857, 942926)) <<===>> Video Editorial [<<<new_com>>>]
((942926, 943005)) <<===>> thanks for the vid. much appreciated! [<<<new_com>>>]
