((-1, 879878)) => <p><strong>E</strong>.</p>   <div class="spoiler"><b class="spoiler-title">Another solution and explanation of E.</b><div class="spoiler-content" style="display: none;"><div class="spoiler"><b class="spoiler-title">Relation/Hint</b><div class="spoiler-content" style="display: none;"><p>Have you played a computer game <a href="https://en.wikipedia.org/wiki/Desktop_Tower_Defense">Desktop Tower Defense</a>?</p></div></div><p>1 . We cut off all white branches. Later we will need some of them, so we need to have e.g. either 1) a copy of an initial graph, or 2) save these white branches to a new graph, which is more efficient way, or 3) we can color branches instead of cutting. Additionally we need to save a node to which a particular cut branch is adjacent. But if a branch is adjacent to a black node we also can drop it, because we have an obvious answer: from all nodes of that branch we can move to the black node. Cutting a white branch is simple loop: we remove white leafs until there are no white leafs left.</p><p>The remaining graph has all of its leafs black.</p><p>2 . Now we can check if there are any three black nodes on the same way. If so then we can move to black node from any point of the graph. If not then we need to process further. Simplest way to check that â€” compare the number of leafs with the number of overall black nodes.</p><p>There is also the case when the number of black leafs is more then 2 and one of the black leafs is adjacent to a node which has more than two edges. Answer is 'all 1', because that leaf attracts to itself from any of 2+ branches with the help of another branch.</p><p>3 . If we haven't obtained an answer 'all 1', then our graph can be seen as this:</p>  <code> <p>where square brackets mark black nodes, parentheses mark white nodes, $$$m$$$ is a number of black leafs, and all $$$k_i \ge 2$$$.</p><p>We can see that it is possible to move to black nodes only from the adjacent nodes: $$$(k_i-1,i), i = 1 \dots m$$$. All these adjacent nodes are unreachable from the rest of the tree because they have only one attractor leaf on their branch ($$$i$$$), and $$$m-1 \ge 1$$$ detractors from other branches.</p><p>4 . Now we check for all nodes with zero answer if it is adjacent to previously cut branch (step 1). If so then all that branch has also zero answer. Implementing e.g. with BFS.</p> <div class="spoiler"><b class="spoiler-title">Slightly different steps:</b><div class="spoiler-content" style="display: none;"><p>After step 2, we can do: for all black leafs we check if adjacent node is white and if so then we paint it black and cut the leaf. Later we check if the number of black leafs is equal to number of overall black nodes. If yes, we obtain similar a graph as in step 3, but all $$$k_i \ge 1$$$, otherwise answer 'all 1'.</p></div></div></div></div>
