((-1, 944811)) <<===>> can anyone explain why we dont have to go beyond 256 for checking for a particular i... i am not able to get this by editorial  [<<<new_com>>>]
((944811, 944825)) <<===>> It's because when xoring a[i] with j, you will get j modified by maximum 8 bits (because a[i] <= 200), therefore you need to check only the last 256 to make it bigger than a[i] ^ j [<<<new_com>>>]
((944825, 945198)) <<===>> I'm sorry, but I didn't get you, could you explain a bit further?We have known that because $$$a[i],a[j]\leq 200$$$, so that utmost changes of j and i is 256. However, as j added 256 and i decreased 256, the gap between j and i was 512 in total.The editorial said the it was correct as well despite you started j from i-256, which is beyond my comprehension. Could you please explain why, if in your comfort? [<<<new_com>>>]
((945198, 945200)) <<===>> You have to see it as binary representation to understand it better.You are now at position j, a[i] ^ j is gonna range between j and j — 256, because only the first 8 bits can change. Now you have to find this is i that satisfies the property that a[j] ^ i is bigger than a[i] ^ j. Because of what I said earlier, to achieve that the only posibilities of i are between j and j — 256. [<<<new_com>>>]
((945200, 945233)) <<===>> Thanks for your reply. [<<<new_com>>>]
((945233, 945235)) <<===>> Did it help you at least? [<<<new_com>>>]
((945235, 945260)) <<===>> Could you explain it a bit more ? [<<<new_com>>>]
((945260, 945262)) <<===>> What exactly? [<<<new_com>>>]
((945262, 945263)) <<===>> a[j]⊕i changes i not more than by 200. This part in the editorial [<<<new_com>>>]
((945263, 945267)) <<===>> visualize in binary to understand better when xoring, all that matters are the set bits (1)because you have a[i] <= 200 => a[i] can have 8 set bits (from 0th to 7th)so when you are xoring i with a[j], only the last 8 bits change in the binary represation of i, if you convert those possible outcomes in base 10, you get a maxmum of 256 [<<<new_com>>>]
((945235, 945354)) <<===>> Of course. Thank you for your timely comment（and sorry for the time gap）！However, what I really want to know is the following. In your clarification, you have explained a[i] ^ j is in range(j-256, j), and you concluded that thus " that the only posibilities of i are between j and j — 256"，but what about the i? a[j] ^ i makes it possible that i may increase 256 as well.(An obvious property is that $$$a-b \leq a \bigoplus b \leq a+b$$$), Then the maximum gap between a[i]^j and a[j]^i may be 512 instead of 256. The editorial said "it's not hard that we could prove j from i-256"(note that i and j have different meanings in your explanation and the editorial), which really confused me.Thank you again for making such timely explanation and I'm looking forward to your further comments! :) [<<<new_com>>>]
((945354, 945398)) <<===>> Because you are doing a[i] ^ j that is the boundary, because you habe to make a[i] ^ j < a[j] ^ i, because of that, the range of i is between j, j — 256 (the same observation applies here) [<<<new_com>>>]
((945398, 945419)) <<===>> Get it. Thank you~ [<<<new_com>>>]
((945419, 945451)) <<===>> skytyf Can you explain it to me why it's not 512? how are we reaching 256? [<<<new_com>>>]
((945451, 945845)) <<===>> I believed Sochu's clarification is one of the proof. To me, I understood it in this way:（Please copy it into notepad to read more comfortably） If the gap between i and j is over 256, the last 9th digit of i and j in binary representation is bound to change by at least 1.(That is, the pattern of i and j in binary representation is like (1..M********)_2 and (1..(M-1)********)_2 [Of course we didn't consider the M=0 case because the reason is the same and '*' can be 0 or 1 arbitrarily] )emphasis:We want to find a[j] ^ i < a[i] ^ j (when j<i) Suppose the case I raised above, why we didn't take the 512 into account?Let us consider why (i-512, i-257) definitely don't fit in the case. Due to the reason above, j in this range have the last 9th digit different from the i(or maybe 10th, 11th...), and a[i] <= 200, which is only have a (********)_2 format. And after a[j]^i a[i]^j，the last 9th digit didn't change, and then we reach that a[i] ^ j still less than a[j] ^ i(Because 9th digit is less), which didn't meet our condition.So we just have to start j from i-256 [<<<new_com>>>]
