((-1, 946045)) => <div class="ttypography"><p>In problem E, </p><p>I'm facing a weird issue, when I initialize the distance to all the arrays with &gt;= 1e14, it gives WA on test case = 37, otherwise, it passed all the test cases.</p><p> <submission link> </p><p>Can someone help me?</p><p>All that I'm changing between the two submissions is <code>for(int i=2;i&lt;=n;i++) dist[i] = ll(1e14);</code></p></div>
((946045, 946102)) => <div class="ttypography"><p>[Removed, as it was an in invalid test case].</p></div>
((946102, 946151)) => <div class="ttypography"><p>The test you provided isn't valid because $$$k$$$ must be at least $$$1$$$. In fact, when $$$k$$$ is at least $$$1$$$, taking a direct flight from $$$1$$$ to $$$n$$$ is always an option, so the answer is bounded by $$$(n - 1)^2 &lt; 10^{10}$$$.</p></div>
((946151, 946152)) => <div class="ttypography"><p>Sorry, my bad. I actually got a counter example locally, but it was too big to analyze, hence I manually tried to set $$$k$$$ to 0 to verify Dijkstra. You're right that I forgot that a positive $$$k$$$ reduces the upper bound as well. </p></div>
((946045, 946137)) => <div class="ttypography"><p>My guess is that you overflow in your <code>HullDynamic</code> class. <code>k</code>s and <code>b</code>s can both overflow int, and so multiplication might overflow long long:</p><p><code>(x-&gt;b - y-&gt;b) * (z-&gt;m - y-&gt;m)</code></p><p>UPD: Changed <code>long long</code>s to <code>int128</code> in your HullDynamic class, AC now:  <submission link> </p></div>
((946137, 946176)) => <div class="ttypography"><p>Thanks mate.</p></div>
