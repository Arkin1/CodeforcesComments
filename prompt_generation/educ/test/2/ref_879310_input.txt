<p>D can be solved in $$$O(n)$$$.  <submission link> .</p> <p>The steps of the algorithm is:</p>   <ol> <li><p>Calculate if we want to choose at most $$$i$$$ smallest numbers, how many numbers can we choose.</p></li> <li><p>Calculate if we want to choose at most $$$i$$$ largest numbers, how many numbers can we choose. </p></li> <li><p>Go through $$$i,j$$$ in the powers of two. $$$i$$$ means the number of the first division after inviting extra participants. $$$j$$$ means the number in the third division. Then we can know how many original participants will be in the second division. So it's easy to find the number of participants in the second division. For every $$$i,j$$$, we choose the smallest sum of three divivions, and minus it with $$$n$$$. It will be the answer.</p></li> </ol> <<===>> 
<p>what about the case when i smallest numbers and j largest numbers are not disjoint there is some overlap ?</p> <<===>> 
<p>For example: n=2 a={1,2}. Let i=1 and j=1, which means there is one person in the left segment while one person in the right segment. However there is no way to add another person to the middle segment since there is no integer between 1 and 2. In short, your code gives the right answer in a wrong way.</p> <<===>> 
<p>Did't it say x &lt; y? there is always a number between.</p> <<===>> 
