<p>In A it is said that (ans = false) if s[i] != s[i+1]. But what if in test 1, aaaabbb, when it runs from a to b (aaaABbb) it's false and it cout "NO" ?, I think I'm understanding it wrong, can someone pls help</p> <<===>> 
<ul> <li>if (s[i] != s[i+1] and s[i] != s[i-1])</li> <li>ans = false</li> </ul> <p>It's also better to draw 1 upper-case character to understand this better. So when you're in "aaaAbbb" you check if(a != b and a != a) =&gt; if(true and false) =&gt; if(false) So the answer doesn't become "NO". You don't enter the if statement and the answer remains "YES".</p> <p>Remember, when you have statements separated by "and" operators, all of them need to be true for the whole statement to be true. I think if you put some more thought into it you will get it.</p> <p>In case this implementation confuses you:</p>   <ul> <li>for j in range(n):</li> <li>if (j == 0 or s[j] != s[j — 1]) and (j == n — 1 or s[j] != s[j + 1]):</li> <li>ans = False</li> </ul> <p>keep in mind that "j == 0" and "j == n-1" statements only help for the extreme cases. In our example, for "Aaaabbb" and "aaaabbB". In those special cases we only check one neighbour.</p> <<===>> 
<p>thanks !</p> <<===>> 
