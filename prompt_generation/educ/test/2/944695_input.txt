((-1, 944695)) => <div class="ttypography"><p>We are sorry for statement of problem D being unclear :( We will do our best to write cleaner and easier to understand statements next time! We hope you enjoyed solving our problems though.</p></div>
((944695, 944722)) => <div class="ttypography"><p>But this problem is really good!</p></div>
((944722, 944724)) => <div class="ttypography"><p>Thank you!<img alt=" " src="/predownloaded/7c/32/7c32609e369d608de15d5d9ee3c48d5961ae44be.jpg" style="max-width: 100.0%;max-height: 100.0%;" /></p></div>
((944695, 944862)) => <div class="ttypography"><p>Hey, thanks for the round. The problems were definitely enjoyable!</p><p>Just to clarify, the statement was not <em>unclear</em>, it was <em>wrong</em>. On top of trying to write cleaner and easier statements, please update statements during the contest if it is pointed out as wrong.</p><p>Thanks, hoping to see more rounds from you!</p></div>
((944862, 945012)) => <div class="ttypography"><p>Why was it wrong?</p><p>I don't think it was wrong.</p><p>Maybe the word subsequence can mislead someone, but there is no scientific mistakes in the statement.</p></div>
((945012, 945020)) => <div class="ttypography"><p>The use of &quot;subsequence&quot; was wrong.</p><p>It is mentioned that array $$$b$$$ is a subsequence of array $$$a$$$. But this is not the case. $$$b$$$ is a subsequence of $$$[0, 1, 2,..., n-1]$$$.</p><p>I'm not complaining about the problem being not understandable. If you read the statement and examples, you understand what $$$b$$$ actually is.</p><p>I'm just saying that not fixing an obvious mistake after being pointed out is a bit insincere.</p></div>
((945020, 945025)) => <div class="ttypography"><p>You thought the use of &quot;subsequence&quot; was wrong, just because you have believed that:</p><p>if you use the word &quot;subsequence&quot; and say that an array $$$b$$$ is a subsequence of $$$a$$$, then the objects in $$$b$$$ must occur in $$$a$$$.</p><p>and the definition is opposite your normal comprehension of the word &quot;subsequence&quot;.</p><p>But the statement gave us a different definition of &quot;subsequence&quot;, then no wonder how the definition was odd, the following description with the word &quot;subsequence&quot; must obey the definition.</p><p>In the statement, it said that an array $$$b$$$ is a subsequence of $$$a$$$ means that:</p><p>$$$0 \le b_0 \le b_1 \le ... \le b_{m-1} &lt; n$$$</p><p>and the following statements did not conflict with this definition, so you can say the definition is trash and not understandable, but you can't say it is wrong.</p><p>I'm just saying that the statement wasn't scientifically <strong>wrong</strong> even if it is not understandable.</p><p>I know the word subsequence normally means picking some values in a. And I even didn't see any usage of subsequence that means picking some indexes.</p><p>But I want to say, if the problem provider explicitly redefinite a word, then he has the right to use this word to express a different idea in his problem.</p><p>Just like you can overload operators in your code, and use it in your meaning of the operators. This operator has normal meaning, but in this code, what it means depends on how you definite it.</p><p>Why downvotes while I am explaining reasonably? I don't understand.</p></div>
((945025, 945030)) => <div class="ttypography"><p>How could you come up with &quot;statement gave us a different definition of 'subsequence'&quot;? If you choose numbers in $$$a$$$ which satisfy $$$a_i \leq n$$$, you can still get $$$0 \leq b_i &lt; b_{i+1} \leq n$$$. Maybe by your standards, ambiguity doesn't affect correctness?</p></div>
((945030, 945035)) => <div class="ttypography"><p>Yes, you can choose numbers in $$$a$$$ which satisfy $$$a_i \le n$$$. But how it matters?</p><p>The statement is pretty clear that you can pick such $$$b$$$ only if $$$a_{b_p} \oplus b_{p+1} &lt; a_{b_{p+1}} \oplus b_p$$$.</p><p>Maybe you don't know even basic logic, the statement didn't say that you have to pick numbers within $$$a$$$, but if you want to pick numbers within $$$a$$$ which satisfy the condition, that's OK. </p><p>It's just the difference between <strong>sufficient condition</strong> and <strong>necessary condition</strong>. It's not ambiguity.</p><p>I hope you can understand.</p><p>Just look at the statement, and tell me what two sentences <strong>conflicts</strong>, which means <strong>wrong</strong>. If there is no such sentences, don't say it is <strong>wrong</strong>.</p></div>
((945035, 945036)) => <div class="ttypography"><p><em>if you want to pick numbers within a which satisfy the condition, that's OK</em></p><p>No, it's OBVIOUSLY not <strong>OK</strong>. You can only choose one of them: pick it from $$$a$$$, or pick it from indexes of $$$a$$$. If statements don't declare <strong>which one</strong> you should choose, it's totally ambiguous. Again, if you think ambiguity is not wrong, that's good for you.</p></div>
((945036, 945042)) => <div class="ttypography"><p>Seems that you can't understand what a &quot;definition&quot; is.</p><p>Let me give you an example that probably helps you understand:</p><p>I can definite a <strong>diameter</strong> of a graph which means the length of the longest <strong>chain</strong> in the graph.(normal version)</p><p>I can also definite a <strong>diameter</strong> of a graph which means the length of an <strong>edge</strong> which is the longest of all shortest path between any two vertexes.(definition in <a href="/contest/1712/problem/D" title="Codeforces Round 813 (Div. 2)">1712D - Empty Graph</a>)</p><p>See? We can definite the same word in two different situations, and you didn't say that <a href="/contest/1712/problem/D" title="Codeforces Round 813 (Div. 2)">1712D - Empty Graph</a> was wrong, right?</p><p>Same for this problem.</p><p>In the normal sight, a subsequence of $$$a$$$ is a set which contains some of the numbers in $$$a$$$.</p><p>In this problem, a subsequence of $$$a$$$ is a set which doesn't matter with $$$a$$$.(You can understand it as $$$index$$$ of $$$a$$$, but actually it is just a <strong>set of numbers which satisfy the definition $$$0 \le b_0 \le...\le b_{m-1 }&lt; n$$$</strong>.)</p><p>And you can use the set of numbers to do something: use $$$a_{b_p} \oplus b_{p+1}$$$ to compare with $$$a_{b_{p+1}}⊕b_p$$$.</p><p>But it is just a usage of this set of numbers, it doesn't means that $$$b$$$ was <strong>born to be a sequence of index of a</strong>. No one claims that, it is just your guess.</p><p>So understand? the definition of <strong>Subsequence</strong> in <strong>this problem</strong> is <strong>OBVIOUSLY</strong> not <strong>AMBIGUOUS</strong>. It is not <strong>AMBIGUITY</strong>. It just mislead you and other participants, but it's pretty clear that you are misleaded badly because you just can't understand what a <strong>definition</strong> is.</p></div>
((945042, 945045)) => <div class="ttypography"><p><em>it doesn't means that b was born to be a sequence of index of a. No one claims that, it is just your guess.</em></p><p>lmao. If it's my gusee, then where's the defination of the special meaning of subsequense in this statement?</p><p>By the way, shouldn't you google what &quot;ambiguous&quot; means first before you reply me?</p></div>
((945045, 945049)) => <div class="ttypography"><p><em>where's the defination of the special meaning of subsequense in this statement</em></p><p>An array b=[b0,b1,…,bm−1], where 0≤b0&lt;b1&lt;…&lt;bm−1&lt;n, is a subsequence of length m of the array a.</p><p><strong>Here. You can find it in the statement.</strong></p><p>By the way, If you are too lazy to look again at the statement, then don't tell me to GOOGLE the definition of a word that <strong>I understand much better than you</strong>.</p></div>
((945036, 945050)) => <div class="ttypography"><p>Also, your words of &quot;choosing&quot; one of the normal definitions in <strong>your</strong> mind and sight is absolutely ridiculous and absurd.</p></div>
((945035, 945131)) => <div class="ttypography"><p>The word subsequence implies that you are <strong>only</strong> allowed to pick values in a. When one looks at the examples it is clear that this isn't what it meant, but it is what it said. The condition on these values restricts which values you can pick (they have to be increasing and less than n).</p><p>If one interprets the text of the problem literally, the only acceptable subsequence in example 1 would be [1] (which is trivially beautiful) so the answer to example 1 would be 1.</p></div>
((945131, 945138)) => <div class="ttypography"><p>Seems that you still don't understand what I am saying.</p><p>I know the word subsequence normally means picking some values in $$$a$$$. And I even didn't see any usage of subsequence that means picking some indexes.</p><p>But I want to say, if the problem provider explicitly redefinite a word, then he has the right to use this word to express a different idea in his problem.</p><p>Just like you can overload operators in your code, and use it in your meaning of the operators. This operator has normal meaning, but in this code, what it means depends on how you definite it.</p></div>
((945138, 945146)) => <div class="ttypography"><p>The issue is that there are two ways of reading the sentence:</p>  <code> <p>It can be read either as a definition of a subsequence, or as simply a definition of b.</p><p>If read as a definition of &quot;b&quot; it means:</p>  <code> <p>The word order implies that it is defining &quot;b&quot;, not &quot;subsequence&quot;. &quot;X is a Y&quot; is normally telling you about &quot;X&quot; not about &quot;Y&quot;; particularly if it is the first time X has been mentioned, and Y is already well known. </p></div>
((945146, 945148)) => <div class="ttypography"><p>No doubt it is a definition of a subsequence.</p><p>Let me simplify the sentence:</p><p>b which satisfy (condition) is a subsequence of length m of the array a.</p><p>Haven't you ever saw this kind of definitions?</p><p>An array b is a permutation of an array a if b consists of the elements of a in arbitrary order. For example, [4,2,3,4] is a permutation of [3,2,4,4] while [1,2,2] is not a permutation of [1,2,3].</p><p>It defines what a permutation is, not what <strong>b</strong> is.</p></div>
((945148, 945164)) => <div class="ttypography"><p>The difference between &quot;where&quot; and &quot;if&quot; matters.</p><p>Consider:</p>  <code> <p>vs.</p>  <code> <p>The first is telling you that all reks are fafis, but that a fafi is a rek if and only if the top is red, the second is telling you all reks with red tops are fafis, and may be defining fafi. There may, however, be other reks with green tops that are not fafis.</p></div>
((945164, 945177)) => <div class="ttypography"><p>The difference between &quot;where&quot; and &quot;if&quot; sure matters.</p><p>but you just ignored the word order.</p><p>look at the following two sentences:</p><p><code>an array a, where (condition), is a xxx of b.</code></p><p>vs.</p><p><code>an array a is a xxx of b where (condition).</code></p><p>The first is telling you that a is an array, and if the array fits (condition), it is a xxx.</p><p>The second is telling you that a is an array, and also it is a xxx, which also fits (condition).</p><p>Same as this sentence. </p><p><code>An array b=[b0,b1,…,bm−1], where 0≤b0&lt;b1&lt;…&lt;bm−1&lt;n, is a subsequence of length m of the array a.</code></p> <ul>   <li>b is an array.</li>   <li>if b fits (0≤b0&lt;b1&lt;…&lt;bm−1&lt;n), it is a subsequence of length m of the array a.</li> </ul></div>
((945025, 945119)) => <div class="ttypography"><p>No it doesn't. It says that this is a condition on the subsequence. Consider the sequence</p><p>a = [1,5,2.3.7]</p><p>a valid subsequence satisfying the condition would be: [1,2,3]</p><p>[0,1,2,3,4] would not be a valid subsequence of a since 0 and 4 aren't in a, so it isn't a subsequence of a.</p><p>[1,5,2] is a subsequence of a, but would not satisfy the condition.</p></div>
((945012, 945117)) => <div class="ttypography"><p>The point is that b is not a subsequence of a, it is a subsequence of the indecies of a. It took me two readings of the problem to realise that the term subsequence was not being used with its normal meaning.</p><p>The problem would have been clearer if it had simply said:</p>  <code> </div>
((944862, 945264)) => <div class="ttypography"><p>yes</p></div>
((944695, 944974)) => <div class="ttypography"><p>Never mind, the whole contest is really enjoyable, and the problems are interesting (I like C and D1 best).</p></div>
((944695, 945107)) => <div class="ttypography"><p>My solution to the misunderstood version of D1 has come out. The link is out <a href="https://codeforces.com/blog/entry/106152">there</a>. :)</p><p>Can anyone solve the misunderstood version of D2? I can't figure out. qaq</p></div>
