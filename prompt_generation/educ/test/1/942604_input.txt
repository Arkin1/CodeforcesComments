((-1, 942604)) => <div class="ttypography"><p>If the formal proof is quite hard, then why is it problem B ?</p><p>Do you expect people to solve without proof ?</p></div>
((942604, 942609)) => <div class="ttypography"><p>That's a mistake on my part, I started wondering about the formal proof only on the day of the round, and it turned out to be unexpectedly difficult.</p></div>
((942604, 942614)) => <div class="ttypography"><blockquote><p>Do you expect people to solve without proof ?</p> </blockquote><p>That's what people usually do...</p></div>
((942614, 942625)) => <div class="ttypography"><p>Yes, but if you guess it wrong, you're gonna get huge amount of penalties and waste a lot of time.</p></div>
((942614, 942656)) => <div class="ttypography"><p>Yea, but for most easy problems usually the gap between intuition and formal proof is not this large. Most of the time all you need to do is to formalize your intuition to turn it into a complete proof, which is definitely not the case for this problem.</p></div>
((942604, 942620)) => <div class="ttypography"><p>Do you really think that those 13062 participants got Accepted on B all with <strong>proofs</strong>? :)</p></div>
((942620, 942650)) => <div class="ttypography"><p>Of course not, it's bad that they solved it without proof. My point is, for easy questions, make the proofs easy too.</p></div>
((942650, 943330)) => <div class="ttypography"><p>Or Make the problem with easy proofs. &gt;_&lt; (XD)</p></div>
((942604, 942685)) => <div class="ttypography"><p>While I do think that it may not be appropriate for div2B when the proof is so difficult, I think it's quite intuitive that the optimal result arises when big numbers are paired with big numbers, leaving small numbers paired with small numbers (as opposed to pairing big numbers with small numbers). Even without that intuition, trying it on a few small examples should quickly demonstrate this trend. Add in the observation that adjacent numbers have a GCD of 1 (so none of the factors are &quot;wasted&quot; by the LCM) and we have a straightforward solution that's very easy to implement. </p><p>I didn't prove it during the contest myself, and that did cause me to hesitate before submission, but the intuition was strong enough that I decided to go ahead anyway. </p></div>
((942685, 943030)) => <div class="ttypography"><p>But the intuition was strong enough that I got +2 :(</p></div>
((943030, 943033)) => <div class="ttypography"><p>I think your intuition was correct, but you simply didn't test odd values. The 1 should have been at the beginning, not the end.</p></div>
((942604, 942762)) => <div class="ttypography"><p>rearrangement inequality, and the fact: x and x+1 are coprimes, is a little bit hard to proof but the intuition helps. Sadly many Competitive programmers don't like maths</p></div>
((942604, 943260)) => <div class="ttypography"><p>i just wrote brute force and saw the pattern for (1 to 9) ;) it was just swap(arr[i],arr[i-1]) from back....</p></div>
