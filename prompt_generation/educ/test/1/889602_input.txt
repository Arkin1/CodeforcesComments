((-1, 889602)) <<===>> No need for FFT in problem since we need only sum of those Stirling's number and this can be done in O(i): Since S(i,j) = sum(1<=t<=j) C(j,t) * t^i * (-1)^(j+t) / j! we have:  S(i,1)+S(i,2)+..+S(i,k) = sum(1<=j<=k,1<=t<=j)( t^i * (-1)^(j-t)/((j-t)! * t!) ).  Let d = j-t, then ans = sum(1<=t<=k,0<=d<=k-t)( (t^i/t!)*((-1)^d / d!) ) iterate over t and sum(0<=d<=k-t) ((-1)^d / d!) can be precomputed [<<<new_com>>>]
((889602, 892309)) <<===>> I really like this formula. It is elegant and works under any prime modulo. Thank you for sharing it! Here's a more detailed explanation and another way to look at it: Let $$$n \geq 1$$$ be a fixed integer.As in tutorial, let $$$p_i = \frac{(-1)^i}{i!}$$$ and $$$q_j = \frac{j^n}{j!}$$$.Then $$$S(n, k) = \sum\limits_{i+j=k} p_i \cdot q_j$$$.  Consider a matrix $$$M$$$ in which $$$M_{i, j} = p_i \cdot q_j$$$ for $$$0 \leq i, j \leq n$$$.Then $$$S(n, k)$$$ is the sum of entries on the antidiagonal $$$i+j = k$$$. Suppose we want to find $$$S(n, 0) + S(n, 1) + ... S(n, k)$$$ for some $$$k$$$.That is to sum the entries above the antidiagonal $$$i+j=k$$$.We can sum these values column by column.For a fixed column $$$j$$$, the sum is $$$q_j \cdot \sum\limits_{i=0}^{k-j} p_i$$$.Thus, $$$S(n, 0) + S(n, 1) + ... S(n, k) = \sum\limits_{j=0}^{k} q_j \cdot \sum\limits_{i=0}^{k-j} p_i$$$.  To compute this efficiently, note that $$$\sum\limits_{i=0}^{k-j} p_i$$$ is just the sum over a prefix of $$$p$$$. My implementation:  (link to problem F)  [<<<new_com>>>]
((889602, 892332)) <<===>> I have a question, though. To compute $$$S(i,1)+S(i,2)+...+S(i,k)$$$, the formula requires to find $$$t^i$$$ over $$$t=0,1,...,k$$$. Can this be computed (or precomputed) in $$$O(i)$$$? [<<<new_com>>>]
((892332, 892337)) <<===>> Oh I get it.We can use linear sieve to find all primes $$$p$$$ and compute $$$p^i$$$.For a composite $$$x = a \cdot b$$$, compute $$$x^i$$$ as $$$a^i \cdot b^i$$$.This is $$$O(k \log i / \log k) = O(i)$$$ [<<<new_com>>>]
