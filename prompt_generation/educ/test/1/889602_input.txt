<p>No need for FFT in problem since we need only sum of those Stirling's number and this can be done in O(i): Since S(i,j) = sum(1&lt;=t&lt;=j) C(j,t) * t^i * (-1)^(j+t) / j! we have: <br/> S(i,1)+S(i,2)+..+S(i,k) = sum(1&lt;=j&lt;=k,1&lt;=t&lt;=j)( t^i * (-1)^(j-t)/((j-t)! * t!) ). <br/> Let d = j-t, then ans = sum(1&lt;=t&lt;=k,0&lt;=d&lt;=k-t)( (t^i/t!)*((-1)^d / d!) ) iterate over t and sum(0&lt;=d&lt;=k-t) ((-1)^d / d!) can be precomputed</p> <<===>> 
<p>I really like this formula. It is elegant and works under any prime modulo. Thank you for sharing it!</p> <p>Here's a more detailed explanation and another way to look at it: Let $$$n \geq 1$$$ be a fixed integer.<br/>As in tutorial, let $$$p_i = \frac{(-1)^i}{i!}$$$ and $$$q_j = \frac{j^n}{j!}$$$.<br/>Then $$$S(n, k) = \sum\limits_{i+j=k} p_i \cdot q_j$$$. </p> <p>Consider a matrix $$$M$$$ in which $$$M_{i, j} = p_i \cdot q_j$$$ for $$$0 \leq i, j \leq n$$$.<br/>Then $$$S(n, k)$$$ is the sum of entries on the antidiagonal $$$i+j = k$$$.</p> <p>Suppose we want to find $$$S(n, 0) + S(n, 1) + ... S(n, k)$$$ for some $$$k$$$.<br/>That is to sum the entries above the antidiagonal $$$i+j=k$$$.<br/>We can sum these values column by column.<br/>For a fixed column $$$j$$$, the sum is $$$q_j \cdot \sum\limits_{i=0}^{k-j} p_i$$$.<br/>Thus, $$$S(n, 0) + S(n, 1) + ... S(n, k) = \sum\limits_{j=0}^{k} q_j \cdot \sum\limits_{i=0}^{k-j} p_i$$$. </p> <p>To compute this efficiently, note that $$$\sum\limits_{i=0}^{k-j} p_i$$$ is just the sum over a prefix of $$$p$$$.</p> <p>My implementation:  <submission link> </p> <<===>> 
<p>I have a question, though. To compute $$$S(i,1)+S(i,2)+...+S(i,k)$$$, the formula requires to find $$$t^i$$$ over $$$t=0,1,...,k$$$. Can this be computed (or precomputed) in $$$O(i)$$$?</p> <<===>> 
<p>Oh I get it.<br/>We can use linear sieve to find all primes $$$p$$$ and compute $$$p^i$$$.<br/>For a composite $$$x = a \cdot b$$$, compute $$$x^i$$$ as $$$a^i \cdot b^i$$$.<br/>This is $$$O(k \log i / \log k) = O(i)$$$</p> <<===>> 
