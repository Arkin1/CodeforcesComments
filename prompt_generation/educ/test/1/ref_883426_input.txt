<p>Hi everyone, I want to share my solution for C which is $$$O(n)$$$.</p> <p>Here is my submission: <submission link> .</p>   <div class="spoiler"><b class="spoiler-title">Spoiler</b><div class="spoiler-content" style="display: none;"><p>We will consider an extra first monster at second $$$1$$$ with health $$$0$$$.</p><p>We might need more than the monster's health to kill it because we have to wind up to kill stronger ones later. More particularly, in order to kill $$$i-th$$$ monster with $$$x$$$ mana, we must kill $$$(i-1)-th$$$ monster with no less than $$$x-(k[i] - k[i - 1])$$$ mana. So it is possible to set $$$h[i]$$$ to $$$max(h[i],h[i+1]+k[i]-k[i+1])$$$, with $$$i=n-1,n-2,\dots , 1,0$$$. Then the following condition holds: <em>"For every $$$0 \leq i \leq n - 1$$$, if we kill $$$i-th$$$ with $$$h[i]$$$ mana, we can also kill $$$(i+1)-th$$$"</em>.</p><p>Then, we only need to calculate the real mana used to kill $$$(i + 1)-th$$$ monster after killing the $$$i-th$$$ one. Firstly we check if it's possible to start from $$$1$$$ the next step and wind up. We can achieve that by using variable <code>step</code> denoting the counts of steps we have before encountering the next monster. If <code>step</code> is not less than $$$h[i+1]$$$, then we can, otherwise we cannot. If we can't, the only option is to start from the current mana.</p></div></div> <<===>> 
